name: Deploy

on:
  push:
    paths: 
      - "demo/**"
      - ".github/workflows/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Get repo files
      uses: actions/checkout@v1
     
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v1.0.0
      with:
        version: 0.12.24

    - name: Init Terraform
      working-directory: ./demo
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: terraform init
    
    - name: Deploy Azure infrastructure
      working-directory: ./demo
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}  
        TF_VAR_subscription_id: ${{ secrets.subscription_id }}
        TF_VAR_client_id: ${{ secrets.client_id }}
        TF_VAR_client_secret: ${{ secrets.client_secret }}
        TF_VAR_tenant_id: ${{ secrets.tenant_id }}
        TF_VAR_psql_password: ${{ secrets.psql_password }} 
        TF_VAR_vm_password: ${{ secrets.password }} 
        TF_VAR_client_app_id: ${{ secrets.client_app_id }}
        TF_VAR_server_app_id: ${{ secrets.server_app_id }}
        TF_VAR_server_app_secret: ${{ secrets.server_app_secret }}
        TF_VAR_tenant_app_id: ${{ secrets.tenant_app_id }}
      run: terraform apply -auto-approve

    - name: Store Kubernetes config
      working-directory: ./demo
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: echo "$(terraform output kube_admin_config)" > ./kube_config

    - name: Install Helm 3
      uses: Azure/setup-helm@v1
      with:
        version: v3.1.1

    - name: Prepare SDK auth file
      working-directory: ./demo
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        sed -i "s/<azure_aubscription_id>/$ARM_SUBSCRIPTION_ID/g" sdk-auth.json
        sed -i "s/<application_id>/$ARM_CLIENT_ID/g" sdk-auth.json
        sed -i "s/<application_secret>/$ARM_CLIENT_SECRET/g" sdk-auth.json
        sed -i "s/<tenant_id>/$ARM_TENANT_ID/g" sdk-auth.json

    - name: Deploy cluster base configuration
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
        password: ${{ secrets.password }} 
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        helm upgrade -i baseconfig ./helm/cluster \
          --set upn=admin@tomaskubicaoffice.onmicrosoft.com \
          --set username=tomas \
          --set password=${password} \
          --set secretsReader.resourceId=$(terraform output secretsReader_resourceId) \
          --set secretsReader.clientId=$(terraform output secretsReader_clientId)

    - name: Deploy KEDA
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
      run: |
        helm repo add kedacore https://kedacore.github.io/charts
        helm repo update
        helm upgrade -i keda kedacore/keda -n keda

    - name: Deploy Ingress controller for Azure App Gw
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        helm repo add application-gateway-kubernetes-ingress https://appgwingress.blob.core.windows.net/ingress-azure-helm-package/
        helm repo update
        helm upgrade -i -n ingress ingress application-gateway-kubernetes-ingress/ingress-azure \
          --set appgw.name=$(terraform output appgw_name) \
          --set appgw.resourceGroup=$(terraform output resource_group) \
          --set appgw.subscriptionId=$ARM_SUBSCRIPTION_ID \
          --set appgw.usePrivateIP=False \
          --set kubernetes.watchNamespace="" \
          --set armAuth.type=servicePrincipal \
          --set armAuth.secretJSON=$(cat sdk-auth.json | base64 -w0) \
          --set rbac.enabled=true

    - name: Deploy Grafana+Prometheus
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
        GRAFANA_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        GRAFANA_CLIENT_ID: ${{ secrets.reader_client_id }}
        GRAFANA_CLIENT_SECRET: ${{ secrets.reader_client_secret }}
        GRAFANA_TENANT_ID: ${{ secrets.tenant_id }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        helm repo add stable https://kubernetes-charts.storage.googleapis.com
        helm repo update
        helm upgrade -i grafana stable/grafana -n grafana -f helm/cluster/grafana-values.yaml \
          --set subscriptionId=$GRAFANA_SUBSCRIPTION_ID \
          --set clientId=$GRAFANA_CLIENT_ID \
          --set clientSecret=$GRAFANA_CLIENT_SECRET \
          --set tenantId=$GRAFANA_TENANT_ID \
          --set workspaceId=$(terraform output workspace_id)
        helm upgrade -i prometheus stable/prometheus -n prometheus -f helm/cluster/prometheus-values.yaml
    
    - name: Export SDK-AUTH as output
      working-directory: ./demo
      id: sdkfile
      run: echo "##[set-output name=sdkauth;]$(tr -d '\n' < sdk-auth.json)"

    - name: Azure CLI login
      uses: azure/login@v1
      with:
        creds: ${{ steps.sdkfile.outputs.sdkauth }}

    - name: Build apps
      working-directory: ./demo
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        az acr build --registry $(terraform output registry_name) --image myappspa:v1 ./src/myappspa
        az acr build --registry $(terraform output registry_name) --image myapptodo:v1 ./src/myapptodo
        az acr build --registry $(terraform output registry_name) --image myappnode:v1 ./src/myappnode

    - name: Deploy todo application to Kubernetes
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
        TF_VAR_psql_password: ${{ secrets.psql_password }} 
        ARM_SUBSCRIPTION_ID: ${{ secrets.subscription_id }}
        ARM_CLIENT_ID: ${{ secrets.client_id }}
        ARM_CLIENT_SECRET: ${{ secrets.client_secret }}
        ARM_TENANT_ID: ${{ secrets.tenant_id }}
      run: |
        registry_name=$(terraform output registry_name)
        helm upgrade -i todo ./helm/myapp \
          --set appspa.image.repository=${registry_name}.azurecr.io/myappspa \
          --set appspa.image.tag=v1 \
          --set apptodo.image.repository=${registry_name}.azurecr.io/myapptodo \
          --set apptodo.image.tag=v1 \
          --set appnode.image.repository=${registry_name}.azurecr.io/myappnode \
          --set appnode.image.tag=v1 \
          --set apphost=cloud.tomaskubica.in \
          --set keyvault.name=$(terraform output keyvault_name) \
          --set keyvault.tenant=$(terraform output keyvault_tenantid) \
          --set keyvault.key=$(terraform output keyvault_psql_keyname) \
          --set keyvault.sbkey=servicebus-todo-connection

    - name: Deploy IIS application to Kubernetes
      working-directory: ./demo
      env:
        KUBECONFIG: "./kube_config"
      run: |
        helm upgrade -i iis ./helm/windows --set apphost=iis.cloud.tomaskubica.in